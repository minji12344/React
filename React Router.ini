- React Router
React에서 클라이언트 측 라우팅을 구현하기 위한 라이브러리
클라이언트 라우팅 : 웹 어플리케이션에서 URL 경로따라 다른 컴포넌트를 동적으로 랜더링하고,
        페이지 간의 전환 네비게이션 처리 기능

React Router를 사용하면 단일 페이지 어플리케이션(Single Page Application, SPA)를 개발할 수 있다.
SPA는 맨 처음 모든 정적 리소스(HTML, CSS, JavaScript)를 로드하고 이후 필요한 데이터만 비동기적으로 가져온다.
Route, Switch, Link, BrowserRouter, HashRouter

// 터미널에서 해당 프로젝트에 설치해버리자 npm install react-router-dom

import {BrowserRouter} from 'react-router-dom';

- 기본 컴포넌트와 라우팅
1) Route : Route 컴포넌트는 특정 경로에 대응하는 컴포넌트를 지정한다.
import {Route} from 'react-router-dom';

function App() {
    return (
        <>
            <Route path"/otherPage" component={Other} />
        </>
    );
}

/otherPage 경로에 대응해서 Other 컴포넌트가 랜더링된다.

2) Switch : Switch 컴포넌트는 여러 개의 Route 중에서 첫번째로 매칭되는 Route만 랜더링한다.
일반적으로 최상위 계층에서 사용되며, 순서대로 첫번째 매칭되는 Route만 처리하기 때문에 하나의 컴포넌트만 랜더링되도록 보장할 수 있다.
import {Route, Switch} from 'react-router-dom';

function App() {
    return (
        <Switch>
            <Route exact path="/" component={Home}/>
            <Route path="/about" component={About}/>
            <Route path="/sell" component={Sell}/>
            <Route component={NotFound}/>
        </Switch>
    );
}

3) Link : Link 컴포넌트는 클릭 가능한 링크 역할을 하는 컴포넌트다. <a> 태그와 비슷하다. (React Router 네비게이션 시스템)
import {Link} from 'react-router-dom'

function App() {
    return (
        <Link to='/buy'>Buy</Link>
    );
}

- 동적 경로 매개변수
동적인 URL 경로를 처리하기 위해 파라미터 값을 활용할 수 있다.
게시물 /post/:id와 같은 형식으로 :id 부분이 실제값으로 대체된다.
경로의 일부분을 변수 취급하고, 값을 추출하여 컴포넌트에서 사용한다.

1) 매개변수 콜론(:)으로 시작하고 경로 세그먼트와 함께 정의되어, : 뒤에 있는 부분이 실제 값으로 대체된다.

import {Route} from 'react-router-dom';

function App() {
    return (
        <>
        <Route path="/post/:id" component={Post} />
        </>
    );
}

2) 파라미터 추출 : useParams 훅을 사용하여 동적 매개변수 값을 추출한다.

import {useParams} from 'react-router-dom';

function Post() {
    const {id} = useParams;

    return <div>ID : {id}</div>;
}

export default Post;

- 라우팅 중첩

<Route path="/" element={<Home/>}>
    <Route path="/post" element={<About/>}/>
    <Route path="/chat" element={<Chat/>}/>
</Route>

/post/chat -> /post/:id
useParams() 사용가능하다.

